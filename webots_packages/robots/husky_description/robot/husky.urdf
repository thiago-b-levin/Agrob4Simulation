<?xml version="1.0" ?>
<!-- =================================================================================== -->
<!-- |    This document was autogenerated by xacro from husky.urdf.xacro               | -->
<!-- |    EDITING THIS FILE BY HAND IS NOT RECOMMENDED                                 | -->
<!-- =================================================================================== -->
<robot name="husky">
  <!-- robot name parameter -->
  <!-- <xacro:arg name="name" default="" /> -->
  <webots>
    <plugin type="webots_driver::huskyDriver"/>
    <plugin type="webots_sensor_publisher::sensor_publisher">
      <wheel_base>0.512</wheel_base>
      <wheel_radius>0.165</wheel_radius>
      <left_wheel_sensor>left_wheel_sensor</left_wheel_sensor>
      <right_wheel_sensor>right_wheel_sensor</right_wheel_sensor>
      <odom_frame>odom</odom_frame>
      <base_frame>base_link</base_frame>
    </plugin>
    <plugin type="webots_sensor_publisher::imupublisher"/>
    <plugin type="webots_scan_publisher::scan_publisher">
      <lidarName>velodyne_lidar</lidarName>
      <topicName>/scan</topicName>
      <frameName>velodyne_lidar</frameName>
      <updateRate>10</updateRate>
      <alwaysOn>True</alwaysOn>
    </plugin>
    <plugin type="webots_ros2_driver::Ros2IMU">
      <!-- Optional parameters -->
      <topicName>/imu/data</topicName>
      <frameName>imu_link</frameName>
      <updateRate>50</updateRate>
      <alwaysOn>True</alwaysOn>
      <enabled>True</enabled>

      <!-- Required device names (must match Webots names) -->
      <inertialUnitName>imu inertial</inertialUnitName>
      <gyroName>imu gyro</gyroName>
      <accelerometerName>imu accelerometer</accelerometerName>
    </plugin>
    <plugin type="webots_sensor_publisher::camera_publisher">
      <cameraName>camera</cameraName>
      <topicName>/camera</topicName>
      <frameName>camera_link</frameName>  
      <updateRate>30</updateRate>
      <alwaysOn>True</alwaysOn>
    </plugin>
  </webots>
  <material name="dark_grey">
    <color rgba="0.2 0.2 0.2 1.0"/>
  </material>
  <material name="medium_grey">
    <color rgba="0.6 0.6 0.6 1.0"/>
  </material>
  <material name="light_grey">
    <color rgba="0.8 0.8 0.8 1.0"/>
  </material>
  <material name="yellow">
    <color rgba="0.8 0.8 0.0 1.0"/>
  </material>
  <material name="black">
    <color rgba="0.15 0.15 0.15 1.0"/>
  </material>
  <material name="white">
    <color rgba="1.0 1.0 1.0 1.0"/>
  </material>
  <material name="red">
    <color rgba="1.0 0.0 0.0 1.0"/>
  </material>
  <!-- Base link is the center of the robot's bottom plate -->
  <link name="base_link">
  <inertial>
      <mass value="46.034"/>
      <origin xyz="-0.00065 -0.085 0.062"/>
      <inertia ixx="0.6022" ixy="-0.02364" ixz="-0.1197" iyy="1.7386" iyz="-0.001544" izz="2.0296"/>
    </inertial>
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://husky_description/meshes/base_link.dae"/>
      </geometry>
    </visual>
    <collision>
      <origin rpy="0 0 0" xyz="0.0 0 0.061875"/>
      <geometry>
        <box size="0.9874 0.5709 0.12375"/>
      </geometry>
    </collision>
    <collision>
      <origin rpy="0 0 0" xyz="0 0 0.17562499999999998"/>
      <geometry>
        <box size="0.7899200000000001 0.5709 0.10375"/>
      </geometry>
    </collision>
  </link>
  <!-- Base footprint is on the ground under the robot -->
  <link name="base_footprint"/>
  <joint name="base_footprint_joint" type="fixed">
    <origin rpy="0 0 0" xyz="0 0 -0.13228"/>
    <parent link="base_link"/>
    <child link="base_footprint"/>
  </joint>
  <!-- Inertial link stores the robot's inertial information -->
  <!-- <link name="inertial_link">
    
      <mass value="46.034"/>
      <origin xyz="-0.00065 -0.085 0.062"/>
      <inertia ixx="0.6022" ixy="-0.02364" ixz="-0.1197" iyy="1.7386" iyz="-0.001544" izz="2.0296"/>
    </inertial>
  </link>
  <joint name="inertial_joint" type="fixed">
    <origin rpy="0 0 0" xyz="0 0 0"/>
    <parent link="base_link"/>
    <child link="inertial_link"/>
  </joint> -->
  <!-- IMU Link-->
  <!-- Can be modified with environment variables in /etc/ros/setup.bash -->
  <!--<link name="imu_link"/>
  <joint name="imu_joint" type="fixed">
    <origin rpy="0 0 0" xyz="0 0 0"/>
    <parent link="base_link"/>
    <child link="imu_link"/>
  </joint> -->
  <!-- GPS Link-->
  <!-- Can be modified with environment variables in /etc/ros/setup.bash -->
<!-- <link name="gps_link"/>
  <joint name="gps_joint" type="fixed">
    <origin rpy="0 0 0" xyz="0 0 0"/>
    <parent link="base_link"/>
    <child link="gps_link"/>
  </joint> -->
  <link name="front_left_wheel">
    <inertial>
      <mass value="2.637"/>
      <origin xyz="0 0 0"/>
      <inertia ixx="0.02467" ixy="0" ixz="0" iyy="0.04411" iyz="0" izz="0.02467"/>
    </inertial>
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://husky_description/meshes/wheel.dae"/>
      </geometry>
    </visual>
    <collision>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <!-- <cylinder length="0.1143" radius="0.1651"/> -->
        <mesh filename="package://husky_description/meshes/wheel.dae"/>
      </geometry>
    </collision>
  </link>
  <gazebo reference="front_left_wheel">
    <mu1 value="2.0"/>
    <mu2 value="2.0"/>
    <kp value="10000000.0"/>
    <kd value="1.0"/>
    <fdir1 value="1 0 0"/>
  </gazebo>
  <joint name="front_left_wheel_joint" type="continuous">
    <parent link="base_link"/>
    <child link="front_left_wheel"/>
    <origin rpy="0 0 0" xyz="0.256 0.2854 0.03282"/>
    <axis rpy="0 0 0" xyz="0 1 0"/>
  </joint>
  <link name="front_right_wheel">
    <inertial>
      <mass value="2.637"/>
      <origin xyz="0 0 0"/>
      <inertia ixx="0.02467" ixy="0" ixz="0" iyy="0.04411" iyz="0" izz="0.02467"/>
    </inertial>
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://husky_description/meshes/wheel.dae"/>
      </geometry>
    </visual>
    <collision>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://husky_description/meshes/wheel.dae"/>
      </geometry>
    </collision>
  </link>
  <gazebo reference="front_right_wheel">
    <mu1 value="2.0"/>
    <mu2 value="2.0"/>
    <kp value="10000000.0"/>
    <kd value="1.0"/>
    <fdir1 value="1 0 0"/>
  </gazebo>
  <joint name="front_right_wheel_joint" type="continuous">
    <parent link="base_link"/>
    <child link="front_right_wheel"/>
    <origin rpy="0 0 0" xyz="0.256 -0.2854 0.03282"/>
    <axis rpy="0 0 0" xyz="0 1 0"/>
  </joint>
  <link name="rear_left_wheel">
    <inertial>
      <mass value="2.637"/>
      <origin xyz="0 0 0"/>
      <inertia ixx="0.02467" ixy="0" ixz="0" iyy="0.04411" iyz="0" izz="0.02467"/>
    </inertial>
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://husky_description/meshes/wheel.dae"/>
      </geometry>
    </visual>
    <collision>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://husky_description/meshes/wheel.dae"/>
      </geometry>
    </collision>
  </link>
  <gazebo reference="rear_left_wheel">
    <mu1 value="2.0"/>
    <mu2 value="2.0"/>
    <kp value="10000000.0"/>
    <kd value="1.0"/>
    <fdir1 value="1 0 0"/>
  </gazebo>
  <joint name="rear_left_wheel_joint" type="continuous">
    <parent link="base_link"/>
    <child link="rear_left_wheel"/>
    <origin rpy="0 0 0" xyz="-0.256 0.2854 0.03282"/>
    <axis rpy="0 0 0" xyz="0 1 0"/>
  </joint>
  <link name="rear_right_wheel">
    <inertial>
      <mass value="2.637"/>
      <origin xyz="0 0 0"/>
      <inertia ixx="0.02467" ixy="0" ixz="0" iyy="0.04411" iyz="0" izz="0.02467"/>
    </inertial>
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://husky_description/meshes/wheel.dae"/>
      </geometry>
    </visual>
    <collision>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://husky_description/meshes/wheel.dae"/>
      </geometry>
    </collision>
  </link>
  <gazebo reference="rear_right_wheel">
    <mu1 value="2.0"/>
    <mu2 value="2.0"/>
    <kp value="10000000.0"/>
    <kd value="1.0"/>
    <fdir1 value="1 0 0"/>
  </gazebo>
  <joint name="rear_right_wheel_joint" type="continuous">
    <parent link="base_link"/>
    <child link="rear_right_wheel"/>
    <origin rpy="0 0 0" xyz="-0.256 -0.2854 0.03282"/>
    <axis rpy="0 0 0" xyz="0 1 0"/>
  </joint>
  <!-- Spawn Husky chassis -->
  <link name="top_chassis_link">
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://husky_description/meshes/top_chassis.dae"/>
      </geometry>
    </visual>
    <collision>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://husky_description/meshes/top_chassis.stl"/>
      </geometry>
    </collision>
  </link>
  <!-- Attach chassis to the robot -->
  <joint name="top_chassis_joint" type="fixed">
    <parent link="base_link"/>
    <child link="top_chassis_link"/>
  </joint>
  <!-- Spawn user rails -->
  <link name="user_rail_link">
    <visual>
      <geometry>
        <mesh filename="package://husky_description/meshes/user_rail.dae"/>
      </geometry>
    </visual>
    <collision>
      <geometry>
        <mesh filename="package://husky_description/meshes/user_rail.stl"/>
      </geometry>
    </collision>
  </link>
  <!-- Attach user rails to base link -->
  <joint name="user_rail" type="fixed">
    <origin rpy="0 0 0" xyz="0.272 0 0.245"/>
    <parent link="base_link"/>
    <child link="user_rail_link"/>
  </joint>
  <!-- Spawn front bumper link -->
  <link name="front_bumper_link">
    <visual>
      <geometry>
        <mesh filename="package://husky_description/meshes/bumper.dae"/>
      </geometry>
    </visual>
    <collision>
      <geometry>
        <mesh filename="package://husky_description/meshes/bumper.stl"/>
      </geometry>
    </collision>
  </link>
  <!-- Attach front bumper -->
  <joint name="front_bumper" type="fixed">
    <origin rpy="0 0 0" xyz="0.48 0 0.091"/>
    <parent link="base_link"/>
    <child link="front_bumper_link"/>
  </joint>
  <!-- Spawn rear bumper link -->
  <link name="rear_bumper_link">
    <visual>
      <geometry>
        <mesh filename="package://husky_description/meshes/bumper.dae"/>
      </geometry>
    </visual>
    <collision>
      <geometry>
        <mesh filename="package://husky_description/meshes/bumper.stl"/>
      </geometry>
    </collision>
  </link>
  <!-- Attach rear bumper -->
  <joint name="rear_bumper" type="fixed">
    <origin rpy="0 0 3.14159" xyz="-0.48 0 0.091"/>
    <parent link="base_link"/>
    <child link="rear_bumper_link"/>
  </joint>
  <link name="top_plate_link">
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://husky_description/meshes/top_plate.dae"/>
      </geometry>
    </visual>
    <collision>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://husky_description/meshes/top_plate.stl"/>
      </geometry>
    </collision>
  </link>
  <!-- Attach top plate -->
  <joint name="top_plate_joint" type="fixed">
    <parent link="base_link"/>
    <child link="top_plate_link"/>
    <origin rpy="0 0 0" xyz="0.0812 0 0.245"/>
  </joint>
  <!-- Top plate front link -->
  <joint name="top_plate_front_joint" type="fixed">
    <parent link="top_plate_link"/>
    <child link="top_plate_front_link"/>
    <origin rpy="0 0 0" xyz="0.36367 0 0.00639"/>
  </joint>
  <!-- Top plate rear link-->
  <joint name="top_plate_rear_joint" type="fixed">
    <parent link="top_plate_link"/>
    <child link="top_plate_rear_link"/>
    <origin rpy="0 0 0" xyz="-0.36633 0 0.00639"/>
  </joint>
  <link name="top_plate_front_link"/>
  <link name="top_plate_rear_link"/>
    <link name="box">
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <box size="0.2 0.3 0.584"/>
      </geometry>
    </visual>
    <collision>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <box size="0.2 0.3 0.584"/>
      </geometry>
    </collision>
  </link>
  <joint name="base_link_solid_joint" type="fixed">
    <parent link="base_link"/>
    <child link="box"/>
    <origin xyz="0 0 0.32" rpy="0 0 0"/>
  </joint>

  <!-- <xacro:if value="$(arg laser_enabled)">

      <xacro:sick_lms1xx_mount prefix="base"/>

      <xacro:sick_lms1xx frame="base_laser" topic="scan" robot_namespace="$(arg robot_namespace)"/>

      <joint name="laser_mount_joint" type="fixed">
        <origin xyz="$(arg laser_xyz)" rpy="$(arg laser_rpy)" />
        <parent link="top_plate_link" />
        <child link="base_laser_mount" />
      </joint>

    </xacro:if> -->
  <!--
      top sensor arch; include this if we have realsense enabled
      keep this as a property to make it easier to add multiple conditions, should we need
      the top bar for any additional sensors in the future
    -->
  <!-- <xacro:property name="topbar_needed_realsense" value="$(arg realsense_enabled)" />
    <xacro:if value="${topbar_needed_realsense}">
      <xacro:sensor_arch prefix="" parent="top_plate_link">
        <origin xyz="-0.35 0 0.51" rpy="0 0 -3.14"/>
      </xacro:sensor_arch>
    </xacro:if> -->
 <!-- <ros2_control name="husky_hardware" type="system">
    <hardware>
      <plugin>husky_base/HuskyHardware</plugin>
      <plugin>fake_components/GenericSystem</plugin>
      <param name="hw_start_duration_sec">2.0</param>
      <param name="hw_stop_duration_sec">3.0</param>
      <param name="wheel_diameter">0.3302</param>
      <param name="max_accel">5.0</param>
      <param name="max_speed">1.0</param>
      <param name="polling_timeout">0.1</param>
      <param name="serial_port">/dev/prolific</param>
    </hardware>
    <joint name="front_left_wheel_joint">
      <command_interface name="velocity">
        <param name="min">-1</param>
        <param name="max">1</param>
      </command_interface>
      <state_interface name="position"/>
      <state_interface name="velocity"/>
    </joint>
    <joint name="rear_left_wheel_joint">
      <command_interface name="velocity">
        <param name="min">-1</param>
        <param name="max">1</param>
      </command_interface>
      <state_interface name="position"/>
      <state_interface name="velocity"/>
    </joint>
    <joint name="front_right_wheel_joint">
      <command_interface name="velocity">
        <param name="min">-1</param>
        <param name="max">1</param>
      </command_interface>
      <state_interface name="position"/>
      <state_interface name="velocity"/>
    </joint>
    <joint name="rear_right_wheel_joint">
      <command_interface name="velocity">
        <param name="min">-1</param>
        <param name="max">1</param>
      </command_interface>
      <state_interface name="position"/>
      <state_interface name="velocity"/>
    </joint>
  </ros2_control>-->
  <!-- This file is a placeholder which is included by default from
       husky.urdf.xacro. If a robot is being customized and requires
       additional URDF, set the HUSKY_URDF_EXTRAS environment variable
       to the full path of the file you would like included. -->

    <!-- IMU -->
    <link name="imu_link">
      <inertial>
        <mass value="0.01"/>
        <origin xyz="0 0 0"/>
        <inertia ixx="1e-6" iyy="1e-6" izz="1e-6" ixy="0" ixz="0" iyz="0"/>
      </inertial>
    </link>
    <joint name="imu_joint" type="fixed">
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <parent link="base_link"/>
      <child link="imu_link"/>
    </joint>

    <!-- Velodyne Puck Lidar -->
    <link name="velodyne_lidar">
        <inertial>
            <mass value="0.83"/>
            <origin rpy="0 0 0" xyz="0 0 0"/>
            <inertia ixx="0.001" ixy="0" ixz="0" iyy="0.001" iyz="0" izz="0.0005"/>
        </inertial>
        <visual>
          <origin xyz="0 -0.00165 0" rpy="0 0 0"/>
          <geometry>
            <cylinder radius="0.052" length="0.0727"/>
          </geometry>
        </visual>
        <collision>
          <origin xyz="0 -0.00165 0" rpy="0 0 0"/>
          <geometry>
            <cylinder radius="0.052" length="0.0727"/>
          </geometry>
        </collision>
    </link>

    <!-- Attach Lidar to Base -->
    <joint name="velodyne_joint" type="fixed">
        <parent link="base_link"/>
        <child link="velodyne_lidar"/>
        <origin xyz="0 0 0.65" rpy="0 0 0"/>
    </joint>

    <!-- RGB Camera-->
    <link name="camera_link">
    </link>

    <!-- Attach camera to Base -->
    <joint name="camera_joint" type="fixed">
        <parent link="base_link"/>
        <child link="camera_link"/>
        <origin xyz="0 0 0.75" rpy="-1.570796 0 -1.570796"/>
    </joint>



<!-- Gazebo Simulation Support -->
  <gazebo reference="velodyne_lidar">
      <sensor type="ray" name="velodyne_lidar">
          <pose>0 0 0 0 0 0</pose>
          <visualize>false</visualize>
          <update_rate>10</update_rate>
          <ray>
              <scan>
                  <horizontal>
                      <samples>1875</samples>
                      <resolution>1</resolution>
                      <min_angle>-3.14159</min_angle>
                      <max_angle>3.14159</max_angle>
                  </horizontal>
                  <vertical>
                      <samples>16</samples>
                      <resolution>1</resolution>
                      <min_angle>-0.2618</min_angle>  <!-- -15 degrees -->
                      <max_angle>0.2618</max_angle>   <!-- 15 degrees -->
                  </vertical>
              </scan>
              <range>
                  <min>0.9</min>
                  <max>130</max>
                  <resolution>0.001</resolution>
              </range>
              <noise>
                  <type>gaussian</type>
                  <mean>0.0</mean>
                  <stddev>0.008</stddev>
              </noise>
          </ray>
          <plugin name="gazebo_ros_laser_controller" filename="libgazebo_ros_velodyne_laser.so">
              <topicName>/velodyne_puck/point_cloud</topicName>
              <frameName>velodyne_lidar</frameName>
              <min_range>0.9</min_range>
              <max_range>130</max_range>
              <gaussianNoise>0.008</gaussianNoise>
          </plugin>
      </sensor>
  </gazebo>
  <gazebo reference="camera_link">
        <sensor type="camera" name="camera">
            <update_rate>30.0</update_rate>
            <camera name="camera">
                <horizontal_fov>1.3962634</horizontal_fov>
                <image>
                    <width>800</width>
                    <height>800</height>
                    <format>R8G8B8</format>
                </image>
                <clip>
                    <near>0.02</near>
                    <far>300</far>
                </clip>
                <noise>
                    <type>gaussian</type>
                    <mean>0.0</mean>
                    <stddev>0.007</stddev>
                </noise>
            </camera>
            <plugin name="camera_controller" filename="libgazebo_ros_camera.so">
                <alwaysOn>true</alwaysOn>
                <updateRate>0.0</updateRate>
                <cameraName>/camera</cameraName>
                <imageTopicName>image_raw</imageTopicName>
                <cameraInfoTopicName>camera_info</cameraInfoTopicName>
                <frameName>camera_link</frameName>
                <hackBaseline>0.07</hackBaseline>
                <distortionK1>0.0</distortionK1>
                <distortionK2>0.0</distortionK2>
                <distortionK3>0.0</distortionK3>
                <distortionT1>0.0</distortionT1>
                <distortionT2>0.0</distortionT2>
            </plugin>
        </sensor>
    </gazebo>
    <gazebo reference="imu_link">
      <gravity>true</gravity>
      <sensor name="imu_sensor" type="imu">
        <always_on>true</always_on>
        <update_rate>100</update_rate>
        <visualize>true</visualize>
        <topic>__default_topic__</topic>
        <plugin filename="libgazebo_ros_imu_sensor.so" name="imu_plugin">
          <ros>
            <remapping>~/out:=imu/data_raw</remapping>
          </ros>
          <topicName>imu</topicName>
          <bodyName>imu_link</bodyName>
          <updateRateHZ>10.0</updateRateHZ>
          <gaussianNoise>0.0</gaussianNoise>
          <xyzOffset>0 0 0</xyzOffset>
          <rpyOffset>0 0 0</rpyOffset>
          <frameName>imu_link</frameName>
          <initialOrientationAsReference>false</initialOrientationAsReference>
        </plugin>
        <pose>0 0 0 0 0 0</pose>
      </sensor>
    </gazebo>
    <ros2_control name="WebotsControl" type="system">
        <hardware>
            <plugin>webots_ros2_control::Ros2ControlSystem</plugin>
        </hardware>
        <joint name="front_left_wheel_joint">
            <state_interface name="position"/>
            <command_interface name="velocity"/>
        </joint>
        <joint name="front_right_wheel_joint">
            <state_interface name="position"/>
            <command_interface name="velocity"/>
        </joint>
                <joint name="rear_left_wheel_joint">
            <state_interface name="position"/>
            <command_interface name="velocity"/>
        </joint>
        <joint name="rear_right_wheel_joint">
            <state_interface name="position"/>
            <command_interface name="velocity"/>
        </joint>
    </ros2_control>  
</robot>
